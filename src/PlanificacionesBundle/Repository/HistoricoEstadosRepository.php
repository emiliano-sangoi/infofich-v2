<?php

namespace PlanificacionesBundle\Repository;

use DateTime;
use Doctrine\ORM\EntityRepository;
use PlanificacionesBundle\Entity\Estado;
use PlanificacionesBundle\Entity\HistoricoEstados;
use PlanificacionesBundle\Entity\Planificacion;
use Symfony\Component\Serializer\Exception\Exception;

/**
 * HistoricoEstadosRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HistoricoEstadosRepository extends EntityRepository
{
    
    /**
     * Se encarga de especificar un estado a una planificacion existente.
     * 
     * @param Planificacion $planificacion
     * @param int $cod_estado
     */
    public function asignarEstado(Planificacion $planificacion, $cod_estado){
        
        $em = $this->getEntityManager();
        
        $repoEstados = $em->getRepository('\PlanificacionesBundle\Entity\Estado');
        $estado = $repoEstados->findOneBy(array('codigo' => $cod_estado));
        if(!$estado instanceof Estado){
            return false;
        }
                                      
        $res = false;
        
        $em->beginTransaction();
        try{

            //actualizar estado actual:
            $hea = $planificacion->getHistoricoEstadoActual();
            if(!$hea){
                $hea = new HistoricoEstados();
            }
            $hea->setFechaHasta( new DateTime() );
            $em->flush();
            
            //nuevo estado:
            $hn = new HistoricoEstados();
            $hn->setPlanificacion($planificacion);
            $hn->setEstado($estado);
            
            //guardar nuevo registro
            $em->persist($hn);
            $em->flush();
                        
            $em->commit();
            
            $res = true;
        } catch (Exception $ex) {
            $em->rollback();
            throw $ex;
        }
        
        return $res;
    }
    
    
    
}
